name: CI/CD for fsitsevice.com 

on:
  push:
    branches:
      - master
      - dev

env:
  IMAGE_NAME: fsit-web-dev
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  SERVER_HOST: ${{ secrets.VPS_IP_ADRESS }}
  SERVER_USERNAME: ${{ secrets.SSH_USERNAME }}
  SERVER_PASSWORD: ${{ secrets.SSH_PASSWORD }}
#   TFE_TOKEN: ${{ secrets.TF_CLOUD_TOKEN }}
#   SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  TARGET_DOMAIN: ${{ secrets.TARGET_DOMAIN }}


jobs:
  build-push-deploy-provision:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
          
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ env.IMAGE_NAME }} .

      - name: Tag Docker Image
        run: docker tag ${{ env.IMAGE_NAME }} ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Docker Image
        uses: docker/build-push-action@v2
        with:
            context: .
            push: true
            tags: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

    #   - name: Build Docker Image and Push
    #     run: |
    #         if [[ "${{ steps.extract_branch.outputs.branch }}" == "dev" ]]; then
    #             COMPOSE_FILE=docker-compose.dev.yml
    #         else
    #             COMPOSE_FILE=docker-compose.yml
    #         fi        
    #         echo "Using Docker Compose file: $COMPOSE_FILE" && \
    #             docker compose -f $COMPOSE_FILE build
    #             docker compose -f $COMPOSE_FILE push

      - name: Login to Server/VPS/VM/Drolet And Deploy
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.VPS_IP_ADRESS }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            port: ${{ secrets.SSH_PORT }}
            # password: ${{ secrets.SSH_PASSWORD }}
            script: |
                cd Fsit-main/
                # git stash
                git pull origin "${{ steps.extract_branch.outputs.branch }}" 
                if [[ "${{ steps.extract_branch.outputs.branch }}" == "dev" ]]; then
                    COMPOSE_FILE=docker-compose.dev.yml
                else
                    COMPOSE_FILE=docker-compose.yml
                fi        
                echo "Using Docker Compose file: $COMPOSE_FILE" && \
                echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                docker compose -f $COMPOSE_FILE --rmi all || true && \
                echo "-------------- pulling images ------------------"
                docker compose -f $COMPOSE_FILE pull && \
                docker compose -f $COMPOSE_FILE up -d

            

    #   - name: Deploy to Digital ocean droplet.
    #     run: |
    #         if [[ "${{ steps.extract_branch.outputs.branch }}" == "dev" ]]; then
    #             COMPOSE_FILE=docker-compose.dev.yml
    #         else
    #             COMPOSE_FILE=docker-compose.yml
    #         fi        
    #         echo "Using Docker Compose file: $COMPOSE_FILE" && \
    #         echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    #         docker compose -f $COMPOSE_FILE down --rmi all || true && \
    #         docker compose -f $COMPOSE_FILE pull && \
    #         docker compose -f $COMPOSE_FILE up -d