version: "3"

networks:
  traefik-net:
    # driver: overlay
    # external: true 
  
services:
  traefik:
    environment:
      - "DO_AUTH_TOKEN=dop_v1_a165986298de5bc363c2c3e2241f47aa3ed7a100e5837faaea2e59e450250336"
    labels:
      traefik.docker.network: "traefik-net"
      traefik.enable: "true"
      traefik.http.routers.traefik.entrypoints: "https"
      traefik.http.routers.traefik.middlewares: "traefikAuth@file,default@file"
      traefik.http.routers.traefik.rule: "Host(`traefik.fsitservices.com`)" # [Attention]
      traefik.http.routers.traefik.service: "api@internal"
      traefik.http.routers.traefik.tls.certresolver: "production"
      traefik.http.routers.traefik.tls.options: "modern@file"
      traefik.http.routers.traefik.tls: "true"
      traefik.http.services.traefik.loadbalancer.server.port: 8080
      traefik.http.services.traefik.loadbalancer.sticky.cookie.httpOnly: "true"
      traefik.http.services.traefik.loadbalancer.sticky.cookie.secure: "true"
      # Schedule Traefik on the Swarm manager nodes, as the Swarm API is only exposed on the manager nodes
      # See https://docs.traefik.io/providers/docker/#docker-api-access_1
    # Published on https://hub.docker.com/_/traefik?tab=tags
    image: traefik:v2.10                                                     # See https://github.com/containous/traefik/releases
    networks:
      - traefik-net
    ports:
      - 80:80
      - 443:443
      # To be able to listen on port 80 (http)
      # - mode: host
      #   published: 80
      #   target: 80
      # # To be able to listen on port 443 (https)
      # - mode: host
      #   published: 443
      #   target: 443
    volumes:
      - ./traefik/localtime:/etc/localtime:ro                                        # Set the container timezone by sharing the read-only localtime
      - ./traefik/config/dynamic_config.yml:/etc/traefik/config.yml:ro            # Set the dynamic configuration for the file provider
      - ./traefik/config/traefik.yml:/etc/traefik/traefik.yml:ro          # Set the static configuration
      - ./traefik/cert:/etc/traefik/acme                                      # Set the location where my ACME certificates are saved to
      - /var/run/docker.sock:/var/run/docker.sock:ro                            # Give access to the UNIX Docker socket

  # db:
  #   image: postgres:15
  #   container_name: fsit-db
  #   environment:
  #     - POSTGRES_DB=${PG_DATABASE}
  #     - POSTGRES_USER=${PG_USER}
  #     - POSTGRES_PASSWORD=${PG_PASSWORD}
  #     - POSTGRES_HOST=${PG_HOST}
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - ./data/postgres/:/var/lib/postgresql/data
  #   networks:
  #     - default

  nginx:
    image: "nginx"
    container_name: fsit-nginx
    labels:
      traefik.docker.network: "traefik-net"
      traefik.enable: "true"
      traefik.http.routers.nginx.entrypoints: "https"
      traefik.http.routers.nginx.middlewares: "default@file"
      traefik.http.routers.nginx.rule: "Host(`fsitservices.com`) || Host(`www.fsitservices.com`)"
      traefik.http.routers.nginx.tls.certresolver: "production"
      traefik.http.routers.nginx.tls.options: "modern@file"
      traefik.http.routers.nginx.tls: "true"
      traefik.http.services.nginx.loadbalancer.server.port: 80
      traefik.http.services.nginx.loadbalancer.sticky.cookie.httpOnly: "true"
      traefik.http.services.nginx.loadbalancer.sticky.cookie.secure: "true"
    restart: always
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./static:/code/static
      - ./mediafiles:/code/mediafiles
    depends_on:
      - web
    networks:
      - traefik-net
      # - default
  # whoami:
  #   image: "traefik/whoami"
  #   container_name: "simple-service"
  #   labels:
  #     traefik.docker.network: "traefik-net"
  #     traefik.enable: "true"
  #     traefik.http.routers.whoami.entrypoints: "https"
  #     traefik.http.routers.whoami.middlewares: "default@file"
  #     traefik.http.routers.whoami.rule: "Host(`whoami.fsitservices.com`, `www.whoami.fsitservices.com`)"
  #     traefik.http.routers.whoami.tls.certresolver: "letsEncrypt"
  #     traefik.http.routers.whoami.tls.options: "modern@file"
  #     traefik.http.routers.whoami.tls: "true"
  #   networks:
  #     - traefik-net
  web:
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    #   network: host
    container_name: fsit-web
    image: tech99/fsit-web-dev
    restart: on-failure
    # volumes:
    #   - .:/code
    command: bash -c "python manage.py collectstatic --no-input && 
                      gunicorn fsit.wsgi:application --bind 0.0.0.0:8000 --timeout 120 -k gevent --workers 4"
    ports:
      - "8000:8000"
    networks:
      - traefik-net